@using System.ComponentModel.DataAnnotations;
@using Microsoft.AspNetCore.Identity;
@using OSsemes.Areas.Identity.Data;
@using System.Security.Claims;
@inject UserManager<IdentityUserOwn> userManager
@inject NavigationManager navManager

<h3>Zmeniť heslo</h3>

<InfoModal @ref="infoModal" Text=@infoModalText>
</InfoModal>

<EditForm EditContext="editContext" OnValidSubmit="ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    

    <div class="form-group ms-3">
        <label>Aktuálne heslo</label>
        <InputText type="password" id="prevpass" @bind-Value="model.PrevPass" class="form-control w-25" />
    </div>

    <div class="form-group ms-3">
        <label>Nové heslo</label>
        <InputText type="password" id="newpas" @bind-Value="model.NewPass" class="form-control w-25" />
    </div>

    <div class="form-group ms-3">
        <label>Opakuj nové heslo</label>
        <InputText type="password" id="renewpass" @bind-Value="model.ReNewPass" class="form-control w-25" />
    </div>

    <button type="submit" class="btn btn-primary m-3" @* @onclick="clearValMess" *@>Zmeniť heslo</button>

</EditForm>

@code {
    private FormChPass model { get; set; } = new FormChPass();
    private EditContext editContext;
    [Parameter]
    public ClaimsPrincipal? loggedIn { get; set; }
    private InfoModal infoModal;
    private string infoModalText = "";

    private async void ValidSubmit()
    {
        if (model.NewPass == model.ReNewPass && loggedIn is not null) {
            var identity = await userManager.GetUserAsync(loggedIn);
            if (identity is not null)
            {
                await userManager.ChangePasswordAsync(identity, model.PrevPass, model.NewPass);
                model = new FormChPass();
                infoModalText = "Zmena hesla prebehla úspešne";
                StateHasChanged();
                await infoModal.OpenModal();
            }
        }
    }

    protected override void OnInitialized()
    {
        editContext = new EditContext(model);
    }

    public class FormChPass
    {
        [Required(ErrorMessage = "Heslo musí byť vyplnené")]
        [DataType(DataType.Password)]
        public string PrevPass { get; set; }

        [Required(ErrorMessage = "Heslo musí byť vyplnené")]
        [RegularExpression(@"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).+$", ErrorMessage = "Heslo musí obsahovať minimálne 1 veľký znak, 1 malý znak, 1 číslicu")] //regex od AI
        [DataType(DataType.Password)]
        [MinLength(6, ErrorMessage = "Heslo musí mať dĺžku minimálne 6 znakov")]
        [MaxLength(64, ErrorMessage = "Heslo musí mať dĺžku maximálne 6 znakov")]
        public string NewPass { get; set; }

        [Required(ErrorMessage = "Heslo musí byť vyplnené")]
        [DataType(DataType.Password)]
        public string ReNewPass { get; set; }
    }

}
