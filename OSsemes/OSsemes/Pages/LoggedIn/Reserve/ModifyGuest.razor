@page "/MyReservations"
@using OSsemes.Data.Database;
@using System.Security.Claims;
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject DataContext db
@inject Room scopedRoom
@inject Rezervation scopedRes
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<InfoModal @ref="chResMod" Text="Rezervácia bola úspešné zmenená.">
</InfoModal>
<ApproveModal @ref="deleteMod" Text="Naozaj chce odstrániť túto rezerváciu?"
              Header="Odstániť"
              FuncOnSucc="() => Vymaz(oznRezerv)"
              FuncOnDiss="EventCallback.Empty">
</ApproveModal>

<header>
    <div class="pricing-header p-3 pb-md-4 mx-auto text-center">
        <h1 class="display-4 fw-normal text-body-emphasis txt-font-own">Aktívne rezervácie</h1>
        <p class="fs-5 text-body-secondary"></p>
    </div>
</header>

@if (MaRezervacie())
{
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Cislo Rezervacie</th>
                <th scope="col">Datum prichodu</th>
                <th scope="col">Datum odchodu</th>
                <th scope="col">Cislo izby</th>
                <th scope="col">Pocet osob</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var activeR in db.Rezervations.Where(x => x.GuestId == userid))
            {
                <tr>
                    <th scope="row">@activeR.Id</th>
                    <td>@activeR.ArrivalDate.ToString("dd.MM.yyyy")</td>
                    <td>@activeR.DepartureDate.ToString("dd.MM.yyyy")</td>
                    <td>@activeR.RoomNumber</td>
                    <td>@activeR.NumberGuest</td>
                    <td>
                        <button type="button" @onclick="(() => Zmen(activeR))"><i class="bi bi-calendar-range"></i></button>
                        <button type="button" @onclick="(() => VymazAsync(activeR))"><i class="bi bi-calendar-x"></i></button>
                    </td>
                </tr>
            }

        </tbody>
    </table>
}
else
{
    <strong>Žiadne aktívne rezervácie</strong>
}

@code {

    private ClaimsPrincipal user;
    private string? userid;
    private InfoModal chResMod;
    private ApproveModal deleteMod;
    private Rezervation oznRezerv;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        if (!user.Identity.IsAuthenticated)     //ak neni nikto prihlaseny
        {
            navManager.NavigateTo("#");
            return;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (await sessionStorage.GetItemAsync<bool>("ResModified"))
            {
                await chResMod.OpenModal();
                await sessionStorage.SetItemAsync("ResModified", false);
            }
        }
    }

    private bool MaRezervacie()
    {
        userid = user.FindFirstValue(ClaimTypes.NameIdentifier);    //ziska sa ID aktualne prihlaseneho usera
        if (userid is not null)
        {
            try
            {
                return db.Rezervations.First(x => x.GuestId == userid && x.DepartureDate >= DateTime.Now) != null; //ak existuje zaznam, ktory ma datum odchodu vacsirovny ako terajsi datum(uz je po ubytovani)
            }
            catch (InvalidOperationException e)
            {
                return false;
            }
        }
        return false;
    }

    private void Zmen(Rezervation active)
    {
        if (active.Room is null && !string.IsNullOrEmpty(active.RoomNumber))
        {
            Room? founded = db.HRooms.FirstOrDefault(x => x.RoomNumber == active.RoomNumber);
            if (founded is null)
            {
                Console.WriteLine("Nemozno najst miestnost");
                return;
            }
            active.Room = founded;
        }

        scopedRes.setFromReservation(active);
        scopedRoom.setFromOtherRoom(new Room());
        navManager.NavigateTo("Accommodation/Reserve");


    }

    private async void VymazAsync(Rezervation active)
    {
        oznRezerv = active;
        await deleteMod.OpenModal();
    }
    private void Vymaz(Rezervation active)
    {
        db.Remove(active);
        db.SaveChanges();
    }


}
